variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  stableNodeVersion: '12.x'
  currentNodeVersion: '14.x'

strategy:
  matrix:
    linux_node_stable_eslint5:
      imageName: 'ubuntu-16.04'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^5'
    linux_node_stable_eslint6:
      imageName: 'ubuntu-16.04'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^6'
    linux_node_stable_eslint7:
      imageName: 'ubuntu-16.04'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^7'
    linux_node_current_eslint5:
      imageName: 'ubuntu-16.04'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^5'
    linux_node_current_eslint6:
      imageName: 'ubuntu-16.04'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^6'
    linux_node_current_eslint7:
      imageName: 'ubuntu-16.04'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^7'
    mac_node_stable_eslint5:
      imageName: 'macos-10.14'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^5'
    mac_node_stable_eslint6:
      imageName: 'macos-10.14'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^6'
    mac_node_stable_eslint7:
      imageName: 'macos-10.14'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^7'
    mac_node_current_eslint5:
      imageName: 'macos-10.14'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^5'
    mac_node_current_eslint6:
      imageName: 'macos-10.14'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^6'
    mac_node_current_eslint7:
      imageName: 'macos-10.14'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^7'
    windows_node_stable_eslint5:
      imageName: 'vs2017-win2016'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^5'
    windows_node_stable_eslint6:
      imageName: 'vs2017-win2016'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^6'
    windows_node_stable_eslint7:
      imageName: 'vs2017-win2016'
      nodeVersion: $(stableNodeVersion)
      eslintVersion: 'eslint@^7'
    windows_node_current_eslint5:
      imageName: 'vs2017-win2016'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^5'
    windows_node_current_eslint6:
      imageName: 'vs2017-win2016'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^6'
    windows_node_current_eslint7:
      imageName: 'vs2017-win2016'
      nodeVersion: $(currentNodeVersion)
      eslintVersion: 'eslint@^7'

pool:
  vmImage: $(imageName)

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(nodeVersion)
  # nodegit for node>=13.x doesn't come with pre-built binaries, need krb5 to build it during CI
  # https://github.com/nodegit/nodegit/issues/1753 https://github.com/nodegit/nodegit/issues/1134
  - task: Bash@3
    condition: and(eq(variables['Agent.OS'],'Linux'), ge(variables['nodeVersion'], variables['currentNodeVersion']))
    inputs:
      targetType: inline
      script: sudo apt-get install -y libkrb5-dev
      # nodegit for node>=13.x doesn't come with pre-built binaries, need krb5 to build it during CI
      # https://github.com/nodegit/nodegit/issues/1753 https://github.com/nodegit/nodegit/issues/1134
  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
        yarn
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages
  - script: yarn --frozen-lockfile && yarn add --dev $(eslintVersion) && yarn test
  - script: yarn benchmarks
    condition: ge(variables['eslintVersion'], 'eslint@^7')
  # Upload Jest code coverage
  - script: yarn spec --coverage --coverageReporters=cobertura
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
